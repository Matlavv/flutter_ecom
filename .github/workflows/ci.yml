name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

env:
    FLUTTER_VERSION: '3.27.0'
    JAVA_VERSION: '17'

jobs:
    quality-check:
        runs-on: ubuntu-latest
        outputs:
            should-deploy: ${{ steps.check-deploy.outputs.should-deploy }}

        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🐦 Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: 'stable'
                  cache: true # Cache Flutter SDK

            - name: 📦 Install dependencies
              run: flutter pub get

            - name: 🎨 Verify formatting
              run: dart format --set-exit-if-changed .

            - name: 🔍 Analyze code
              run: flutter analyze --no-fatal-infos

            - name: 🧪 Run tests with coverage
              run: flutter test --coverage

            - name: 📊 Upload coverage
              uses: codecov/codecov-action@v3
              with:
                  file: coverage/lcov.info
                  flags: unittests
                  fail_ci_if_error: false

            - name: ✅ Check deployment conditions
              id: check-deploy
              run: |
                  if [[ "${{ github.ref }}" == "refs/heads/main" && "${{ github.event_name }}" == "push" ]]; then
                      echo "should-deploy=true" >> $GITHUB_OUTPUT
                  else
                      echo "should-deploy=false" >> $GITHUB_OUTPUT
                  fi

    # Build parallèle Web + Android
    build-web:
        runs-on: ubuntu-latest
        needs: quality-check
        if: needs.quality-check.outputs.should-deploy == 'true'

        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🐦 Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: 'stable'
                  cache: true

            - name: 📦 Install dependencies
              run: flutter pub get

            - name: 🌐 Build web
              run: flutter build web --release --web-renderer canvaskit

            - name: 🚀 Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
                  working-directory: ./build/web
                  vercel-args: '--prod'

            - name: 📦 Upload web artifacts (fallback)
              uses: actions/upload-artifact@v4
              with:
                  name: web-build-${{ github.sha }}
                  path: build/web/
                  retention-days: 7

    build-android:
        runs-on: ubuntu-latest
        needs: quality-check
        if: needs.quality-check.outputs.should-deploy == 'true'

        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: ☕ Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: 'zulu'
                  java-version: ${{ env.JAVA_VERSION }}
                  cache: 'gradle' # Cache Gradle

            - name: 🐦 Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: 'stable'
                  cache: true

            - name: 📦 Install dependencies
              run: flutter pub get

            - name: 🤖 Build Android (Debug signing)
              run: |
                  flutter build apk --release --target-platform android-arm64
                  flutter build appbundle --release --target-platform android-arm64

            - name: 📱 Upload Android artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: android-build-${{ github.sha }}
                  path: |
                      build/app/outputs/flutter-apk/
                      build/app/outputs/bundle/release/
                  retention-days: 7

    deployment-summary:
        runs-on: ubuntu-latest
        needs: [quality-check, build-web, build-android]
        if: always() && needs.quality-check.outputs.should-deploy == 'true'

        steps:
            - name: 📋 Deployment Summary
              run: |
                  echo "## 🚀 Déploiement CI/CD Résumé" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Web Build**: ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Android Build**: ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  if [[ "${{ secrets.VERCEL_TOKEN }}" != "" ]]; then
                      echo "✅ **Web déployé sur Vercel**" >> $GITHUB_STEP_SUMMARY
                  else
                      echo "⚠️ **Web build disponible en artifact**" >> $GITHUB_STEP_SUMMARY
                  fi
                  echo "📱 **Android APK/AAB disponibles en artifacts**" >> $GITHUB_STEP_SUMMARY

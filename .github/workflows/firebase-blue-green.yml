name: 🚀 CI/CD Firebase Blue-Green

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:
        inputs:
            action:
                description: 'Action à effectuer'
                required: true
                default: 'deploy'
                type: choice
                options:
                    - deploy
                    - rollback-blue
                    - rollback-green
                    - status

env:
    FLUTTER_VERSION: '3.24.5'
    JAVA_VERSION: '17'
    PROJECT_ID: 'flutter-app-ecom'

jobs:
    test:
        name: 🧪 Tests
        runs-on: ubuntu-latest
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🐦 Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: 'stable'
                  cache: true

            - name: 📦 Get dependencies
              run: flutter pub get

            - name: 🔍 Analyze code
              run: flutter analyze

            - name: 🧪 Run tests
              run: flutter test --coverage

            - name: 📊 Upload coverage
              uses: codecov/codecov-action@v4
              if: success()
              with:
                  file: coverage/lcov.info
                  token: ${{ secrets.CODECOV_TOKEN }}
                  fail_ci_if_error: false

    build-web:
        name: 🌐 Build Web
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🐦 Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: 'stable'
                  cache: true

            - name: 📦 Get dependencies
              run: flutter pub get

            - name: 🔨 Build web
              run: flutter build web --release --web-renderer canvaskit

            - name: 📤 Upload web build
              uses: actions/upload-artifact@v4
              with:
                  name: web-build
                  path: build/web/
                  retention-days: 7

    build-android:
        name: 🤖 Build Android
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: ☕ Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: 'zulu'
                  java-version: ${{ env.JAVA_VERSION }}

            - name: 🐦 Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  channel: 'stable'
                  cache: true

            - name: 📦 Get dependencies
              run: flutter pub get

            - name: 🔨 Build AAB
              run: flutter build appbundle --release --target-platform android-arm64
            - name: 📤 Upload AAB
              uses: actions/upload-artifact@v4
              with:
                  name: android-aab
                  path: build/app/outputs/bundle/release/app-release.aab
                  retention-days: 7

    deploy:
        name: 🚀 Deploy to Firebase
        runs-on: ubuntu-latest
        needs: [test, build-web]
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'deploy'))
        environment: production
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 📤 Download web build
              uses: actions/download-artifact@v4
              with:
                  name: web-build
                  path: build/web/

            - name: 🔧 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: 🔥 Setup Firebase CLI
              run: npm install -g firebase-tools

            - name: 🎯 Determine deployment channel
              id: channel
              run: |
                  # Simple logic: use timestamp to alternate between blue and green
                  TIMESTAMP=$(date +%s)
                  if [ $((TIMESTAMP % 2)) -eq 0 ]; then
                    echo "channel=blue" >> $GITHUB_OUTPUT
                    echo "other_channel=green" >> $GITHUB_OUTPUT
                  else
                    echo "channel=green" >> $GITHUB_OUTPUT
                    echo "other_channel=blue" >> $GITHUB_OUTPUT
                  fi
                  echo "Deploying to channel: $(cat $GITHUB_OUTPUT | grep channel= | head -1 | cut -d= -f2)"

            - name: 🚀 Deploy to preview channel
              env:
                  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
              run: |
                  CHANNEL="${{ steps.channel.outputs.channel }}"
                  echo "🚀 Deploying to channel: $CHANNEL"

                  firebase hosting:channel:deploy $CHANNEL \
                    --project $PROJECT_ID \
                    --expires 30d \
                    --token $FIREBASE_TOKEN

            - name: 🧪 Run smoke tests
              id: smoke_tests
              run: |
                  CHANNEL="${{ steps.channel.outputs.channel }}"
                  PREVIEW_URL="https://$PROJECT_ID--$CHANNEL-$(echo $PROJECT_ID | tr '[:upper:]' '[:lower:]' | tr '-' '').web.app"

                  echo "🧪 Running smoke tests on: $PREVIEW_URL"

                  # Wait for deployment to be ready
                  sleep 30

                  # Test 1: Check if site is accessible
                  STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$PREVIEW_URL" || echo "000")
                  if [ "$STATUS_CODE" != "200" ]; then
                    echo "❌ Smoke test failed: Status code $STATUS_CODE"
                    echo "smoke_tests_passed=false" >> $GITHUB_OUTPUT
                    exit 1
                  fi
                  echo "✅ Site is accessible (200)"

                  # Test 2: Check for Flutter content
                  CONTENT=$(curl -s "$PREVIEW_URL" || echo "")
                  if [[ ! "$CONTENT" == *"flutter"* ]] && [[ ! "$CONTENT" == *"Flutter"* ]]; then
                    echo "❌ Smoke test failed: Flutter content not found"
                    echo "smoke_tests_passed=false" >> $GITHUB_OUTPUT
                    exit 1
                  fi
                  echo "✅ Flutter content detected"

                  echo "🎉 All smoke tests passed!"
                  echo "smoke_tests_passed=true" >> $GITHUB_OUTPUT
                  echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

            - name: 🔄 Promote to live
              if: steps.smoke_tests.outputs.smoke_tests_passed == 'true'
              env:
                  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
              run: |
                  CHANNEL="${{ steps.channel.outputs.channel }}"
                  echo "🔄 Promoting channel $CHANNEL to live"

                  firebase hosting:clone $PROJECT_ID:$CHANNEL $PROJECT_ID:live \
                    --project $PROJECT_ID \
                    --token $FIREBASE_TOKEN

                  echo "✅ Successfully promoted to live!"

            - name: 📊 Deployment summary
              if: always()
              run: |
                  echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Channel**: ${{ steps.channel.outputs.channel }}" >> $GITHUB_STEP_SUMMARY

                  if [ "${{ steps.smoke_tests.outputs.smoke_tests_passed }}" = "true" ]; then
                    echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
                    echo "- **Live URL**: https://$PROJECT_ID.web.app" >> $GITHUB_STEP_SUMMARY
                  else
                    echo "- **Status**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
                  fi

                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### 🔗 URLs:" >> $GITHUB_STEP_SUMMARY
                  echo "- **Production**: https://$PROJECT_ID.web.app" >> $GITHUB_STEP_SUMMARY
                  echo "- **Preview**: ${{ steps.smoke_tests.outputs.preview_url }}" >> $GITHUB_STEP_SUMMARY

    rollback:
        name: 🔙 Rollback
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch' && (github.event.inputs.action == 'rollback-blue' || github.event.inputs.action == 'rollback-green')
        environment: production
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🔧 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: 🔥 Setup Firebase CLI
              run: npm install -g firebase-tools

            - name: 🔙 Execute rollback
              env:
                  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
              run: |
                  if [ "${{ github.event.inputs.action }}" = "rollback-blue" ]; then
                    TARGET_CHANNEL="blue"
                  else
                    TARGET_CHANNEL="green"
                  fi

                  echo "🔙 Rolling back to channel: $TARGET_CHANNEL"

                  firebase hosting:clone $PROJECT_ID:$TARGET_CHANNEL $PROJECT_ID:live \
                    --project $PROJECT_ID \
                    --token $FIREBASE_TOKEN

                  echo "✅ Rollback completed successfully"
                  echo "🌐 Live URL: https://$PROJECT_ID.web.app"

    status:
        name: 📊 Channel Status
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'status'
        steps:
            - name: 📥 Checkout code
              uses: actions/checkout@v4

            - name: 🔧 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: 🔥 Setup Firebase CLI
              run: npm install -g firebase-tools

            - name: 📊 Show channel status
              env:
                  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
              run: |
                  echo "📊 Firebase Hosting Channels Status:"
                  firebase hosting:channel:list --project $PROJECT_ID --token $FIREBASE_TOKEN

                  echo ""
                  echo "🔗 Available URLs:"
                  echo "- Production: https://$PROJECT_ID.web.app"
                  echo "- Blue Channel: https://$PROJECT_ID--blue-$(echo $PROJECT_ID | tr '[:upper:]' '[:lower:]' | tr '-' '').web.app"
                  echo "- Green Channel: https://$PROJECT_ID--green-$(echo $PROJECT_ID | tr '[:upper:]' '[:lower:]' | tr '-' '').web.app"

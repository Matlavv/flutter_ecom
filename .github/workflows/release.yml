name: Release Build

on:
    workflow_dispatch: # Déclenchement manuel uniquement
        inputs:
            build_android:
                description: 'Build Android APK/AAB'
                required: true
                default: true
                type: boolean
            build_web:
                description: 'Build and deploy Web'
                required: true
                default: true
                type: boolean

jobs:
    build-android-release:
        runs-on: ubuntu-latest
        if: ${{ inputs.build_android }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: 'zulu'
                  java-version: '17'

            - name: Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: '3.27.0'
                  channel: 'stable'

            - name: Install dependencies
              run: flutter pub get

            # Configuration des clés de signature (optionnel)
            - name: Setup Android signing
              if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
              run: |
                  echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
                  echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
                  echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
                  echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
                  echo "storeFile=upload-keystore.jks" >> android/key.properties

            - name: Build APK (Production)
              run: flutter build apk --release --target-platform android-arm,android-arm64,android-x64

            - name: Build AAB (Production)
              run: flutter build appbundle --release --target-platform android-arm,android-arm64,android-x64

            - name: Upload APK Release
              uses: actions/upload-artifact@v4
              with:
                  name: apk-release
                  path: build/app/outputs/flutter-apk/
                  retention-days: 90

            - name: Upload AAB Release
              uses: actions/upload-artifact@v4
              with:
                  name: aab-release
                  path: build/app/outputs/bundle/release/
                  retention-days: 90

            # Nettoyage des clés sensibles
            - name: Cleanup signing files
              if: always()
              run: |
                  rm -f android/app/upload-keystore.jks
                  rm -f android/key.properties

    build-web-release:
        runs-on: ubuntu-latest
        if: ${{ inputs.build_web }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Flutter
              uses: subosito/flutter-action@v2
              with:
                  flutter-version: '3.27.0'
                  channel: 'stable'

            - name: Install dependencies
              run: flutter pub get

            - name: Build web (Production)
              run: flutter build web --release --web-renderer canvaskit

            - name: Upload web build
              uses: actions/upload-artifact@v4
              with:
                  name: web-release
                  path: build/web/
                  retention-days: 90

            # Déploiement optionnel (décommentez selon votre plateforme)

            # Firebase Hosting
            # - name: Deploy to Firebase Hosting
            #   if: ${{ secrets.FIREBASE_TOKEN != '' }}
            #   uses: FirebaseExtended/action-hosting-deploy@v0
            #   with:
            #     repoToken: '${{ secrets.GITHUB_TOKEN }}'
            #     firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
            #     channelId: live
            #     projectId: your-firebase-project-id

            # GitHub Pages
            # - name: Deploy to GitHub Pages
            #   uses: peaceiris/actions-gh-pages@v3
            #   with:
            #     github_token: ${{ secrets.GITHUB_TOKEN }}
            #     publish_dir: build/web

            # Netlify
            # - name: Deploy to Netlify
            #   if: ${{ secrets.NETLIFY_AUTH_TOKEN != '' }}
            #   uses: nwtgck/actions-netlify@v2
            #   with:
            #     publish-dir: build/web
            #     production-branch: main
            #     github-token: ${{ secrets.GITHUB_TOKEN }}
            #     deploy-message: "Deploy from GitHub Actions"
            #   env:
            #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
